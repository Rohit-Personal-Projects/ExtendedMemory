using System;
using System.Collections.Generic;
using System.Linq;
using Couchbase.Lite;
using ExtendedMemory.DataAccess;
using ExtendedMemory.Helpers;
using ExtendedMemory.Models;
using Xamarin.Forms;

namespace ExtendedMemory.Views
{
    public partial class HomePage : ContentPage
        {
            public HomePage()
            {
                InitializeComponent();

                time.Time = DateTime.Now.TimeOfDay;
                DependencyService.Get<IGetLocation>().GetUserLocation(entryCity, entryState, entryCountry);
            }

            async void OnButtonClicked(object sender, EventArgs args)
            {
                try
                {
                    Button button = (Button)sender;

                    if (String.IsNullOrWhiteSpace(txtEntry.Text))
                    {
                        await DisplayAlert("Enter Text", "Please enter some text", "OK");
                        return;
                    }

                    // Trial code for couchbase db Starts
                    /* This line is required for iOS only */
                    Couchbase.Lite.Storage.SystemSQLite.Plugin.Register();

                    /* Create a manager */
                    Manager manager = Manager.SharedInstance;

                    /* Create or open the database named app */
                    Database database = manager.GetDatabase("app");

                    /* The properties that will be saved on the document */
                    Dictionary<string, object> properties = new Dictionary<string, object>
                    {
                        { "title", "Couchbase Mobile"},
                        { "sdk", "C#" }
                    };

                    /* Create a new document */
                    Document document = database.CreateDocument();

                    /* Save the document to the database */
                    document.PutProperties(properties);

                    /* Log the document ID (generated by the database)
                       and properties */
                    Console.WriteLine($"nikitha Document ID :: {document.Id}");
                    Console.WriteLine($"Learning {document.GetProperty("title")} with {document.GetProperty("sdk")}");

                    /* Create replicators to push & pull changes to & from Sync Gateway. */
                    Uri url = new Uri("http://localhost:4984/hello");
                    Replication push = database.CreatePushReplication(url);
                    Replication pull = database.CreatePullReplication(url);
                    push.Continuous = true;
                    pull.Continuous = true;

                    /* Start replicators */
                    push.Start();
                    pull.Start();

                    //Trial code for couchbase db Ends

                    var memory = new Memory
                    {
                        Text = txtEntry.Text,
                        Date = date.Date + time.Time,
                        City = entryCity.Text,
                        State = entryState.Text,
                        Country = entryCountry.Text,
                        People = txtPeople.Text.Split(' ').ToList(),
                        Tags = txtTags.Text.Split(' ').ToList(),
                    };

                    Console.WriteLine(memory);

                    /* Saving memory in SQLite
                    var memoryDB = DependencyService.Get<IMemoryDatabase>();
                    memoryDB.Save(memory);
                    var test = memoryDB.Get();
                    */

                    await DisplayAlert("Success", "Memory saved.", "OK");
                }
                catch (Exception e)
                {
                    Console.WriteLine(e);
                }
            }
        }
    }
