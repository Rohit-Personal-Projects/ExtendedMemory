using System;
using System.Collections.Generic;
using Couchbase.Lite;
using ExtendedMemory.DataAccess;
using ExtendedMemory.Models;
using Newtonsoft.Json;
using Xamarin.Forms;


[assembly: Dependency(typeof(MemoryDatabase))]
namespace ExtendedMemory.DataAccess
{
    public class MemoryDatabase : IMemoryDatabase
    {
        static Database database;


        public MemoryDatabase()
        {
            // Create a singleton db object here?
            Couchbase.Lite.Storage.SystemSQLite.Plugin.Register();
            var manager = Manager.SharedInstance;
            database = manager.GetDatabase("extendedmemory");

        }

        public Response<string> Save(Memory memory)
        {

            // Move setup to constructor
            /* This line is required for iOS only */
          
            /* Create a manager */
           // var manager = Manager.SharedInstance;

            /* Create or open the database named app */
            //var database = manager.GetDatabase("extendedmemory");


            var json = JsonConvert.SerializeObject(memory);

            ///* Create a new document */
            var document = database.CreateDocument();

            /* Save the document to the database */
            document.PutProperties(JsonConvert.DeserializeObject<Dictionary<string, object>>(json));

            /* Log the document ID (generated by the database)
               and properties */
            Console.WriteLine($"Document ID :: {document.Id}");
            Console.WriteLine($"Learning {document.GetProperty("Text")} with location {document.GetProperty("Location")}");

            return new Response<string>
            {
                IsSuccess = true,
                Item = document.Id
            };
        }

        public List<Memory> Get()
        {
            throw new NotImplementedException();
        }

        public Memory Get(SearchType searchType)
        {
            throw new NotImplementedException();
        }

        public Response<string> Forget(Memory memory)
        {
            throw new NotImplementedException();
        }
    }
}